name: CI/CD Pipeline - MERN App

on:
  push:
    branches:
      - main

env:
  ALB_DNS: note-making-proj-alb-682722499.eu-north-1.elb.amazonaws.com
  PROJECT_NAME: note-making-proj
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
  SSH_USER: ubuntu
  SSH_KEY: ${{ secrets.EC2_SSH_KEY }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: DevEnvironment

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Debug secrets presence
        run: |
          echo "DOCKERHUB_USERNAME set? ${{ secrets.DOCKERHUB_USERNAME != '' }}"
          echo "AWS_ACCESS_KEY_ID set? ${{ secrets.AWS_ACCESS_KEY_ID != '' }}"
          echo "AWS_SECRET_ACCESS_KEY set? ${{ secrets.AWS_SECRET_ACCESS_KEY != '' }}"
          echo "EC2_SSH_KEY set? ${{ secrets.EC2_SSH_KEY != '' }}"

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-north-1

      - name: Write SSH key
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > ec2_key.pem
          chmod 600 ec2_key.pem

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_PASSWORD }}

      - name: Build and push backend Docker image
        run: |
          docker build -t ${{ env.DOCKERHUB_USERNAME }}/mern-backend:latest ./backend
          docker push ${{ env.DOCKERHUB_USERNAME }}/mern-backend:latest

      - name: Build and push frontend Docker image
        run: |
          docker build --build-arg VITE_BACKEND_BASE_URL="http://${{ env.ALB_DNS }}:5000" -t ${{ env.DOCKERHUB_USERNAME }}/mern-frontend:latest ./frontend
          docker push ${{ env.DOCKERHUB_USERNAME }}/mern-frontend:latest

      - name: Terraform Init & Apply
        run: |
          cd terraform
          terraform init
          terraform apply -auto-approve

      - name: Get public IPs of EC2 instances
        id: fetch_ips
        run: |
          ips=$(aws ec2 describe-instances \
            --filters "Name=tag:Name,Values=${{ env.PROJECT_NAME }}-instance-*" "Name=instance-state-name,Values=running" \
            --query 'Reservations[*].Instances[*].PublicIpAddress' \
            --output text)
          echo "ips=$ips" >> $GITHUB_OUTPUT

      - name: Deploy MERN app on EC2 instances
        run: |
          for ip in ${{ steps.fetch_ips.outputs.ips }}
          do
            echo "Deploying to $ip"
            scp -o StrictHostKeyChecking=no -i ec2_key.pem docker-compose.yml ubuntu@$ip:/home/ubuntu/docker-compose.yml
            ssh -o StrictHostKeyChecking=no -i ec2_key.pem ubuntu@$ip "docker-compose -f /home/ubuntu/docker-compose.yml pull && docker-compose -f /home/ubuntu/docker-compose.yml up -d"
          done
